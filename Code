volatile int flow_frequency;
unsigned int liters_minutes, f_val;
unsigned long ctTime, flow_val, cloopTime;
unsigned int totalLiter;
float calibrationFactor = 0.01;  // Adjust this based on your calibration

const int ledStatus = 12;
float totalWaterUsage = 0.0;

void flowLogic() {
  liters_minutes = (flow_frequency * 60 / 7.5) * calibrationFactor;
  flow_frequency = 0;
  Serial.print("Water Sensor: ");
  Serial.print(liters_minutes, DEC);
  Serial.print(" Liters/minutes | Total: ");
  Serial.print(totalWaterUsage, DEC);
  Serial.println(" liters ");
// Print the cumulative total of litres flowed since starting
    Serial.print("Output Liquid Quantity: ");
    Serial.print(totalLiter);
    Serial.println("Liters");
    Serial.print("\t"); 		  // Print tab space
	Serial.print(totalLiter/1000);
	Serial.print("L");
  if (liters_minutes >= 10) {
    digitalWrite(ledStatus, HIGH);
  } else if (liters_minutes < 10) {
    digitalWrite(ledStatus, LOW);
  }

  // Update total water usage
  totalWaterUsage += liters_minutes;
}

void flow() // Water flow Interrupt function
{
  flow_frequency++;
  f_val++;
}

void setup() {
  Serial.begin(9600);
  Serial.println("Micro Project Thailand ^.^ ");
  attachInterrupt(0, flow, RISING);
  sei();
  ctTime = millis();
  cloopTime = ctTime; // Water flow

  pinMode(ledStatus, OUTPUT);
}

void loop() {
  ctTime = millis();
  if (ctTime >= (cloopTime + 1000))
   {
    cloopTime = ctTime;
    flowLogic();
  }
